package HackerRank;import java.util.*;/** * list A: Multiples * list B: Divisors * and find common them */public class BetweenTwoSets {    public static void main(String[] args) {        final List <Integer> a = new ArrayList<>();        final List <Integer> b = new ArrayList<>();        a.add(2);        a.add(4);        b.add(16);        b.add(32);        b.add(96);        System.out.println(getTotalX(a, b));    }    public static int getTotalX(List<Integer> a, List<Integer> b) {        int count = 0;        /*Get LCM of all elements of a*/        final int aSize = a.size();        int lcm = a.get(0);        for(int i = 1; i < aSize; i++){            lcm = getLCM(lcm, a.get(i));        }        /*Get GCD of all elements of b*/        final int bSize = b.size();        int gcd = b.get(0);        for(int i = 1; i < bSize; i++){            gcd = getGCD(gcd, b.get(i));        }        /*Count multiples of lcm that divided the gcd*/        int multiple = 0;        while(multiple <= gcd){            multiple += lcm;            if(gcd % multiple== 0){                count++;            }        }        return count;    }    public static int getGCD(int number1, int number2){        int rem;        while(number2 != 0){            rem = number1 % number2;            number1 = number2;            number2 = rem;        }        return number1;    }    public static int getLCM(int number1, int number2){        return (number1 * number2) / getGCD(number1, number2); /*return lcm*/    }}